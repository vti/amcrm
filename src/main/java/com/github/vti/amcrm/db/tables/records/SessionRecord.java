/*
 * This file is generated by jOOQ.
 */
package com.github.vti.amcrm.db.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import com.github.vti.amcrm.db.tables.Session;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SessionRecord extends UpdatableRecordImpl<SessionRecord>
        implements Record4<String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /** Setter for <code>session.id</code>. */
    public void setId(String value) {
        set(0, value);
    }

    /** Getter for <code>session.id</code>. */
    public String getId() {
        return (String) get(0);
    }

    /** Setter for <code>session.user_id</code>. */
    public void setUserId(String value) {
        set(1, value);
    }

    /** Getter for <code>session.user_id</code>. */
    public String getUserId() {
        return (String) get(1);
    }

    /** Setter for <code>session.created_at</code>. */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /** Getter for <code>session.created_at</code>. */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /** Setter for <code>session.expires_at</code>. */
    public void setExpiresAt(LocalDateTime value) {
        set(3, value);
    }

    /** Getter for <code>session.expires_at</code>. */
    public LocalDateTime getExpiresAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Session.SESSION.ID;
    }

    @Override
    public Field<String> field2() {
        return Session.SESSION.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Session.SESSION.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Session.SESSION.EXPIRES_AT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getExpiresAt();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getExpiresAt();
    }

    @Override
    public SessionRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public SessionRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public SessionRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public SessionRecord value4(LocalDateTime value) {
        setExpiresAt(value);
        return this;
    }

    @Override
    public SessionRecord values(
            String value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /** Create a detached SessionRecord */
    public SessionRecord() {
        super(Session.SESSION);
    }

    /** Create a detached, initialised SessionRecord */
    public SessionRecord(
            String id, String userId, LocalDateTime createdAt, LocalDateTime expiresAt) {
        super(Session.SESSION);

        setId(id);
        setUserId(userId);
        setCreatedAt(createdAt);
        setExpiresAt(expiresAt);
    }
}
